---
import { actions } from 'astro:actions'

import Pencil from '@lucide/astro/icons/pencil'
import Trash from '@lucide/astro/icons/trash-2'

import Layout from '@layouts/Layout.astro'
import PostInfo from '@components/PostInfo.astro'
import NavLink from '@components/NavLink.astro'
import Button from '@components/Button.astro'
import Dialog from '@components/Dialog.astro'

const { id } = Astro.params

if (id === undefined) {
  throw new Error('The post could not be found')
}

const result = await Astro.callAction(actions.posts.get, { id })

if (result.error) {
  throw new Error(result.error.message)
}

const post = result.data
---

<Layout title={post.title}>
  <main class="flex flex-col gap-8 self-center p-4">
    <header class="prose">
      <h1 class="mb-2 text-4xl font-bold">{post.title}</h1>
      <PostInfo post={post} />
    </header>
    <main class="prose">
      <Fragment set:html={post.content} />
    </main>
    <footer class="flex gap-4 self-start">
      <NavLink href={`/new?id=${post.id}`} dark>
        Edit <Pencil stroke-width={1} size={16} />
      </NavLink>
      <Button variant="danger" type="button" id="delete-btn">
        Delete
        <Trash stroke-width={1} size={16} />
      </Button>
    </footer>
  </main>
  <Dialog id="delete-post-modal">
    <div class="prose flex flex-col items-center text-center">
      <h3>Are you sure you want to delete this post?</h3>
      <p>This action cannot be undone.</p>
      <div class="flex gap-2">
        <Button id="cancel-delete-btn">Cancel</Button>
        <Button variant="danger" id="confirm-delete-btn" data-post-id={post.id}>
          Confirm
          <Trash stroke-width={1} size={16} />
        </Button>
      </div>
    </div>
  </Dialog>
</Layout>

<script>
  import { actions } from 'astro:actions'
  import { navigate } from 'astro:transitions/client'

  const deleteBtn = document.querySelector('#delete-btn')
  const cancelBtn = document.querySelector('#cancel-delete-btn')
  const confirmBtn = document.querySelector<HTMLButtonElement>(
    '#confirm-delete-btn'
  )
  const deletePostModal =
    document.querySelector<HTMLDialogElement>('#delete-post-modal')

  deleteBtn?.addEventListener('click', () => {
    deletePostModal?.showModal()
  })

  cancelBtn?.addEventListener('click', () => {
    deletePostModal?.close()
  })

  confirmBtn?.addEventListener('click', async () => {
    const postId = confirmBtn.dataset.postId

    if (postId === undefined) return

    await actions.posts.delete({ id: postId })
    navigate('/')
  })
</script>
